// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sales_CRUD.Context;

#nullable disable

namespace Sales_CRUD.Migrations
{
    [DbContext(typeof(SalesCRUDDbContext))]
    [Migration("20240726234433_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sales_CRUD.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CnpjCpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAniversario")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Sales_CRUD.Models.Filial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendedorResponsavel")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VendedorResponsavel");

                    b.ToTable("Filiais");
                });

            modelBuilder.Entity("Sales_CRUD.Models.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Filial")
                        .HasColumnType("int");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<int>("QuantidadeEstoque")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMinima")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<float>("ValorUnitario")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("Filial");

                    b.HasIndex("Tipo");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("Sales_CRUD.Models.ProdutoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DescontoAplicavel")
                        .HasColumnType("bit");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ProdutoTipos");
                });

            modelBuilder.Entity("Sales_CRUD.Models.Vendas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Cancelada")
                        .HasColumnType("bit");

                    b.Property<int>("Cliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2");

                    b.Property<int>("Produto")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.Property<bool>("VendaOnline")
                        .HasColumnType("bit");

                    b.Property<int>("Vendedor")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Cliente");

                    b.HasIndex("Produto");

                    b.HasIndex("Vendedor");

                    b.ToTable("Vendas");
                });

            modelBuilder.Entity("Sales_CRUD.Models.Vendedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CnpjCpf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataAniversario")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Filial")
                        .HasColumnType("int");

                    b.Property<bool>("Inativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PercentualComissao")
                        .HasColumnType("real");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Filial");

                    b.ToTable("Vendedores");
                });

            modelBuilder.Entity("Sales_CRUD.Models.Filial", b =>
                {
                    b.HasOne("Sales_CRUD.Models.Vendedor", null)
                        .WithMany()
                        .HasForeignKey("VendedorResponsavel")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sales_CRUD.Models.Produto", b =>
                {
                    b.HasOne("Sales_CRUD.Models.Filial", null)
                        .WithMany()
                        .HasForeignKey("Filial")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sales_CRUD.Models.ProdutoTipo", null)
                        .WithMany()
                        .HasForeignKey("Tipo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sales_CRUD.Models.Vendas", b =>
                {
                    b.HasOne("Sales_CRUD.Models.Cliente", null)
                        .WithMany()
                        .HasForeignKey("Cliente")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sales_CRUD.Models.Produto", null)
                        .WithMany()
                        .HasForeignKey("Produto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Sales_CRUD.Models.Vendedor", null)
                        .WithMany()
                        .HasForeignKey("Vendedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Sales_CRUD.Models.Vendedor", b =>
                {
                    b.HasOne("Sales_CRUD.Models.Filial", null)
                        .WithMany()
                        .HasForeignKey("Filial")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
